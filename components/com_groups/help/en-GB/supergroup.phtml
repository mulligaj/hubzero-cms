<?php
/**
 * HUBzero CMS
 *
 * Copyright 2005-2011 Purdue University. All rights reserved.
 *
 * This file is part of: The HUBzero(R) Platform for Scientific Collaboration
 *
 * The HUBzero(R) Platform for Scientific Collaboration (HUBzero) is free
 * software: you can redistribute it and/or modify it under the terms of
 * the GNU Lesser General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any
 * later version.
 *
 * HUBzero is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * HUBzero is a registered trademark of Purdue University.
 *
 * @package   hubzero-cms
 * @author    Christopher Smoak <csmoak@purdue.edu>
 * @copyright Copyright 2005-2011 Purdue University. All rights reserved.
 * @license   http://www.gnu.org/licenses/lgpl-3.0.html LGPLv3
 */

// Check to ensure this file is included in Joomla!
defined('_JEXEC') or die('Restricted access');
?>

<h1>Super Groups</h1>
<p>Super groups are advanced HUB groups, who have their own webspace within the HUB to showcase their group.</p>

<h6>Advanced Features for Group Pages</h6>
<p>Super groups have the ability to include PHP and javascript code into group pages and modules. Pages or modules that contain PHP or Javascript code will then need to be approved by a group page approver. Notifications are sent to approvers when a page needs to be approved. Another notification will be sent to the group managers when the page has been approved.</p>

<hr />

<h3>Templating System</h3>
<p>A new templating system has been added to help Super groups create a better web presence. When a super group is created, a default template is created and placed in the groups filespace.</p>

<p class="info">The only file needed for a super group template to work is /site/groups/{groupid}/template/index.php</p>

<h6>File Directory Structure</h6>
<p>Below shows the desired file directory structure for super groups. Following this pattern will allow HUB owners and developers to add new developments and find bugs easier.</p>
<div class="grid">
	<div class="col span4">
		<figure>
			<img src="/components/com_groups/help/images/supergroup/filesystem.png">
			<figcaption>File Structure</figcaption>
		</figure>
	</div>
	<div class="col span8 omega">&nbsp;</div>
</div>

<hr />

<h6>Default Template</h6>
<p>A default template is created for each super group. This can be used as a base for the super groups template.</p>
<figure>
	<img src="/components/com_groups/help/images/supergroup/template.png">
	<figcaption>Default Template</figcaption>
</figure>

<hr />

<h6>Error Template</h6>
<p>Super groups have the ability use a custom error template (error.php), which can include a stylesheet (error.css) or scripts to display a custom error page.</p>
<figure>
	<img src="/components/com_groups/help/images/supergroup/error.png">
	<figcaption>Error Template</figcaption>
</figure>

<hr />

<h6>Group Includes</h6>
<p>The following group include tags can be used within a template to display the content, the menu, the member/manager toolbar, modules, or include a Google Analytics tracking code.</p>
<pre><?php
echo htmlentities('<group:include type="content" />') . "\n";
echo htmlentities('<group:include type="content" scope="before" />') . "\n";
echo htmlentities('<group:include type="menu" />') . "\n";
echo htmlentities('<group:include type="toolbar" />') . "\n";
echo htmlentities('<group:include type="modules" position="{position}" />') . "\n";
echo htmlentities('<group:include type="module" title="{title}" />') . "\n";
echo htmlentities('<group:include type="googleanalytics" account="{account}" />') . "\n";
?></pre>

<hr />

<h3>Page Templates</h3>
<p>You'll probably want most of your group pages to look about the same. Sometimes, though, you may need a specific page, or a group of pages, to display or behave differently. This is easily accomplished with page templates.</p>


<h6>Speciailized Page Template</h6>
<p>Create a template for one Page: Intended for one specific page, you can create a specialized template, named with that page's alias or ID:</p>
<ol>
	<li>page-{alias}.php</li>
	<li>page-{id}.php</li>
</ol>

<p>For example: Your About Us page has an alias of 'about-us' and an ID of 6. If template has a file named page-about-us.php or page-6.php, then it will automatically find and use that file to render the About Us page.</p>

<p class="info">To be used, specialized page templates must be in your groups template directory: /site/groups/{groupid}/template/</p>

<hr />

<h6>Custom Page Template</h6>
<p>Create a template that can be used by any page: A custom page template can be used by multiple pages. To create a custom page template make a new file starting with a template name inside a PHP comment. Here's the syntax:</p>

<pre>
<?php
echo htmlentities('<?php
/*
Template Name: My Custom Page
*/');
?>
</pre>

<p class="info">To be used, custom page templates must be in your groups template directory: /site/groups/{groupid}/template/</p>

<h6>Selecting a Custom Template</h6>
<p>Once you upload the file to your template's folder, the template name, "My Custom Page", will list in the edit page screen's Template dropdown.</p>
<div class="grid">
	<div class="col span4">
		<figure>
			<img src="/components/com_groups/help/images/supergroup/customtemplateselect.png">
			<figcaption>Custom Template Select</figcaption>
		</figure>
	</div>
	<div class="col span8 omega">&nbsp;</div>
</div>

<hr />

<h6>Template Hierarchy</h6>
<p></p>
<ol>
	<li>Custom Template — If the page has a custom template assigned, the HUB will looks for that file and, if found, use it.</li>
	<li>page-{alias}.php — Else the HUB looks for and, if found, uses a specialized template named with the page's alias.</li>
	<li>page-{id}.php — Else the HUB looks for and, if found, uses a specialized template named with the page's ID.</li>
	<li>page.php — Else the HUB looks for and, if found, uses the default page template.</li>
	<li>index.php — Else the HUB uses a the template's index file.</li>
</ol>
	
<hr />

<h3>Databases</h3>
<p>Each super group comes with its own database. This database can be used to store data for that group. The credentials for accessing that database can be found in the super groups database config file.</p>

<h6>Database Config Path</h6>
<pre>/site/groups/{groupid}/config/db.php</pre>

<h6>Database Config Contents</h6>
<pre>
<?php echo htmlentities("<?php
return array(
	'host' => 'localhost',
	'port' => '',
	'user' => 'sgmanager',
	'password' => 'xxxxx',
	'database' => 'sg_{group_cn}',
	'prefix'   => ''
);"); ?>
</pre>

<hr />

<h3>PHP Pages</h3>
<p>Super groups have the ability to include PHP code in any group page or module through the page and module managers. If you are finding this is hard to manage or the approval process is taking too long. Users with SSH access and PHP knowledge can add any number of PHP pages to their super group.</p>

<p>Super groups can also create a hiearchy folders within the pages directory</p>

<h6>PHP Pages Directory</h6>
<pre>/site/groups/{groupid}/pages/</pre>

<h6>Examples</h6>
<pre>
1. /site/groups/{groupid}/pages/features.php -> /groups/{groupcn}/features

2. /site/groups/{groupid}/pages/features/one.php -> /groups/{groupcn}/features/one

3. /site/groups/{groupid}/pages/features/two.php -> /groups/{groupcn}/features/two
</pre>

<hr />

<h3>Components</h3>
<p>Super groups now have the ability to have their own components. They are setup the <u>exact</u> same as a regular component except for their file location.</p>
<p>For more information regarding developing components see: <a target="_blank" href="https://hubzero.org/documentation/1.2.2/webdevs">https://hubzero.org/documentation/1.2.2/webdevs</a></p>

<h6>Component Directory</h6>
<pre>/site/groups/{groupid}/components/com_{component}/</pre>

<h6>Component Language File Directory</h6>
<pre>/site/groups/{groupid}/language/en-GB/en-GB.com_{component}.ini</pre>

<h6>Component Paths</h6>
<p>As a helper for super group component developers the path to the component directory is defined in a constant.</p>
<pre>JPATH_GROUPCOMPONENT</pre>

<p>So as an example, if your creating the component "com_drwho", the JPATH_GROUPCOMPONENT constant equals:</p>
<pre>/{web_root}/site/groups/{groupid}/components/com_drwho/</pre>

<p class="warning">Note: You should be able to move the component to the main components folder and and have it work without any changes.</p>

<p class="info">URL's built within a super group component will automatically have "/groups/{group_cn}/" prepended to them. Please dont manually do that in your component or it will result in an error.</p>
